
Robot Class:
===================
Robot Class, Java’nın AWT (Abstract Window Toolkit) kütüphanesinde bulunan, fare ve klavye gibi donanım cihazlarını
kontrol etmek için kullanılan bir sınıftır. GUI testlerinde, özellikle Selenium'un erişemediği sistem seviyesindeki
durumlarda kullanılır. Bu sınıf, fareyi belirli bir noktaya taşıma, tıklama, klavye tuşlarına basma gibi işlemleri
yapabilir.

Robot Class'ın Kullanım Amaçları:
---------------------------------
1. Fare Hareketi (Mouse Movement): Fareyi ekranda belirli bir noktaya taşıyabilir.
2. Fare Tıklaması (Mouse Click): Fare ile belirli bir noktada sol veya sağ tıklama yapabilir.
3. Klavyeden Tuşlara Basma (Keyboard Events): Klavyeden tuşlara basabilir veya yazı yazabilir.
4. Ekran Görüntüsü Alma (Screen Capture): Belirli bir alanın ekran görüntüsünü alabilir.
5. Kopyala-Yapıştır İşlemleri (Clipboard Usage): Panoya veri kopyalayıp yapıştırabilir.

Robot Class Kullanımı:
----------------------
1. Robot Class'ı Tanımlama:
   - `Robot robot = new Robot();`

2. Fareyi Hareket Ettirme:
   - `robot.mouseMove(500, 300); // Fareyi x=500, y=300 koordinatına taşır`

3. Fare Tıklaması:
   - Sol tıklama:
     `robot.mousePress(KeyEvent.BUTTON1_DOWN_MASK);`
     `robot.mouseRelease(KeyEvent.BUTTON1_DOWN_MASK);`
   - Sağ tıklama:
     `robot.mousePress(KeyEvent.BUTTON3_DOWN_MASK);`
     `robot.mouseRelease(KeyEvent.BUTTON3_DOWN_MASK);`

4. Klavyeden Tuşlara Basma:
   - `robot.keyPress(KeyEvent.VK_CONTROL);`
   - `robot.keyPress(KeyEvent.VK_C);`
   - `robot.keyRelease(KeyEvent.VK_C);`
   - `robot.keyRelease(KeyEvent.VK_CONTROL);`

5. Panoya Veri Kopyalama:
   - `StringSelection stringSelection = new StringSelection("Kopyalanacak metin");`
   - `Toolkit.getDefaultToolkit().getSystemClipboard().setContents(stringSelection, null);`

6. Ekran Görüntüsü Alma:
   - `Rectangle screenRect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());`
   - `BufferedImage screenFullImage = robot.createScreenCapture(screenRect);`
   - `ImageIO.write(screenFullImage, "png", new File("screenshot.png"));`

Neden Robot Class Kullanılır?
-----------------------------
1. Selenium'un Yapamadığı İşlemler: Örneğin, işletim sistemi seviyesindeki dosya yükleme pencerelerini kontrol edebilir.
2. İnsan Etkileşimini Simüle Etme: Gerçek bir kullanıcıyı taklit ederek fareyi hareket ettirip tıklamalar yapabilir.
3. Cross-platform Uygulamalarda Test: Windows, macOS, Linux gibi farklı platformlarda test otomasyonu yapmaya olanak sağlar.

Robot Class Kullanımında Dikkat Edilmesi Gerekenler:
----------------------------------------------------
1. Sabit Koordinatlar: Farklı çözünürlüklerde aynı sonuçları vermeyebilir. Dinamik koordinatlar kullanmak daha iyidir.
2. Thread.sleep() Kullanımı: İşlemler arasında bazen bekleme koymak gerekebilir, ancak bu minimum düzeyde tutulmalıdır.
3. Multitasking Sorunları: Robot Class fiziksel fare ve klavye hareketlerini simüle eder, bu nedenle test sırasında başka
   bir işlem yapılmamalıdır.

Sonuç:
------
Robot Class, özellikle GUI testlerinde, işletim sistemi seviyesindeki etkileşimler için güçlü bir araçtır.
Fare hareketlerini ve klavye tuş basımlarını simüle ederek kullanıcı etkileşimini otomatikleştirmek
ve Selenium ile yapılamayan işlemleri tamamlamak için idealdir.
Her ekran çözünürlüğüne uygun dinamik fare hareketleri ve tuş basımları ile testlerinizi daha esnek hale getirebilirsiniz.
